INFO  02:27:08,295 - Compiling source file: C:\Users\Administrator\Desktop\Kompajler MJ\test\test302.mj
INFO  02:27:08,722 - #2 program
INFO  02:27:08,722 - #51 test302
INFO  02:27:08,723 - #6 const
INFO  02:27:08,724 - #51 int
INFO  02:27:08,725 - #51 jedan
INFO  02:27:08,725 - #11 = 
INFO  02:27:08,725 - #48 1
INFO  02:27:08,725 - #18 ;
INFO  02:27:08,726 - #51 int
INFO  02:27:08,727 - #51 i
INFO  02:27:08,727 - #13 ,
INFO  02:27:08,738 - #51 j
INFO  02:27:08,738 - #18 ;
INFO  02:27:08,739 - #51 bool
INFO  02:27:08,739 - #51 ibool
INFO  02:27:08,740 - #18 ;
INFO  02:27:08,740 - #51 int
INFO  02:27:08,740 - #51 niz
INFO  02:27:08,740 - #8 [
INFO  02:27:08,741 - #7 ]
INFO  02:27:08,741 - #18 ;
INFO  02:27:08,742 - #4 {
INFO  02:27:08,744 - #51 int
INFO  02:27:08,746 - #51 sum
INFO  02:27:08,747 - #9 (
INFO  02:27:08,747 - #51 int
INFO  02:27:08,747 - #51 z
INFO  02:27:08,748 - #13 ,
INFO  02:27:08,749 - #51 int
INFO  02:27:08,749 - #51 d
INFO  02:27:08,749 - #10 )
INFO  02:27:08,754 - #4 {
INFO  02:27:08,761 - #12 return
INFO  02:27:08,762 - #51 z
INFO  02:27:08,763 - #23 +
INFO  02:27:08,768 - #51 d
INFO  02:27:08,816 - #18 ;
INFO  02:27:08,818 - #5 }
INFO  02:27:08,819 - #51 int
INFO  02:27:08,820 - #51 inkrement
INFO  02:27:08,820 - #9 (
INFO  02:27:08,821 - #51 int
INFO  02:27:08,823 - #51 a
INFO  02:27:08,823 - #13 ,
INFO  02:27:08,823 - #51 int
INFO  02:27:08,824 - #51 inc
INFO  02:27:08,824 - #10 )
INFO  02:27:08,824 - #51 int
INFO  02:27:08,824 - #51 pom
INFO  02:27:08,825 - #18 ;
INFO  02:27:08,825 - #4 {
INFO  02:27:08,826 - #16 if
INFO  02:27:08,826 - #9 (
INFO  02:27:08,826 - #51 inc
INFO  02:27:08,826 - #35 ==
INFO  02:27:08,827 - #51 jedan
INFO  02:27:08,831 - #10 )
INFO  02:27:08,832 - #51 pom
INFO  02:27:08,833 - #11 = 
INFO  02:27:08,833 - #48 1
INFO  02:27:08,837 - #18 ;
INFO  02:27:08,839 - #17 else
INFO  02:27:08,839 - #16 if
INFO  02:27:08,841 - #9 (
INFO  02:27:08,841 - #51 inc
INFO  02:27:08,841 - #35 ==
INFO  02:27:08,842 - #48 2
INFO  02:27:08,842 - #10 )
INFO  02:27:08,842 - #51 pom
INFO  02:27:08,844 - #11 = 
INFO  02:27:08,851 - #51 a
INFO  02:27:08,851 - #18 ;
INFO  02:27:08,851 - #12 return
INFO  02:27:08,852 - #51 sum
INFO  02:27:08,852 - #9 (
INFO  02:27:08,852 - #51 a
INFO  02:27:08,853 - #13 ,
INFO  02:27:08,853 - #51 pom
INFO  02:27:08,853 - #10 )
INFO  02:27:08,854 - #18 ;
INFO  02:27:08,854 - #5 }
INFO  02:27:08,854 - #51 bool
INFO  02:27:08,855 - #51 verify
INFO  02:27:08,855 - #9 (
INFO  02:27:08,855 - #10 )
INFO  02:27:08,857 - #4 {
INFO  02:27:08,857 - #14 print
INFO  02:27:08,857 - #9 (
INFO  02:27:08,857 - #49 v
INFO  02:27:08,857 - #10 )
INFO  02:27:08,858 - #18 ;
INFO  02:27:08,858 - #12 return
INFO  02:27:08,858 - #50 false
INFO  02:27:08,858 - #18 ;
INFO  02:27:08,858 - #5 }
INFO  02:27:08,859 - #15 void
INFO  02:27:08,859 - #51 main
INFO  02:27:08,860 - #9 (
INFO  02:27:08,861 - #10 )
INFO  02:27:08,861 - #4 {
INFO  02:27:08,861 - #16 if
INFO  02:27:08,861 - #9 (
INFO  02:27:08,861 - #48 1
INFO  02:27:08,861 - #34 !=
INFO  02:27:08,861 - #48 1
INFO  02:27:08,863 - #10 )
INFO  02:27:08,866 - #14 print
INFO  02:27:08,866 - #9 (
INFO  02:27:08,866 - #24 -
INFO  02:27:08,866 - #48 6
INFO  02:27:08,866 - #10 )
INFO  02:27:08,867 - #18 ;
INFO  02:27:08,868 - #17 else
INFO  02:27:08,868 - #14 print
INFO  02:27:08,868 - #9 (
INFO  02:27:08,868 - #48 0
INFO  02:27:08,869 - #10 )
INFO  02:27:08,869 - #18 ;
INFO  02:27:08,869 - #51 ibool
INFO  02:27:08,869 - #11 = 
INFO  02:27:08,869 - #50 false
INFO  02:27:08,869 - #18 ;
INFO  02:27:08,869 - #51 i
INFO  02:27:08,869 - #11 = 
INFO  02:27:08,869 - #48 0
INFO  02:27:08,870 - #18 ;
INFO  02:27:08,870 - #44 do
INFO  02:27:08,870 - #4 {
INFO  02:27:08,870 - #16 if
INFO  02:27:08,870 - #9 (
INFO  02:27:08,871 - #51 i
INFO  02:27:08,871 - #35 ==
INFO  02:27:08,871 - #48 2
INFO  02:27:08,871 - #10 )
INFO  02:27:08,871 - #51 ibool
INFO  02:27:08,871 - #11 = 
INFO  02:27:08,872 - #50 true
INFO  02:27:08,872 - #18 ;
INFO  02:27:08,872 - #51 i
INFO  02:27:08,872 - #25 ++
INFO  02:27:08,873 - #18 ;
INFO  02:27:08,874 - #5 }
INFO  02:27:08,875 - #45 while
INFO  02:27:08,875 - #9 (
INFO  02:27:08,875 - #51 i
INFO  02:27:08,875 - #30 <
INFO  02:27:08,875 - #48 5
INFO  02:27:08,877 - #10 )
INFO  02:27:08,877 - #18 ;
INFO  02:27:08,877 - #16 if
INFO  02:27:08,877 - #9 (
INFO  02:27:08,878 - #51 ibool
INFO  02:27:08,878 - #10 )
INFO  02:27:08,878 - #16 if
INFO  02:27:08,878 - #9 (
INFO  02:27:08,878 - #51 i
INFO  02:27:08,878 - #35 ==
INFO  02:27:08,879 - #48 5
INFO  02:27:08,879 - #10 )
INFO  02:27:08,879 - #14 print
INFO  02:27:08,879 - #9 (
INFO  02:27:08,879 - #48 1
INFO  02:27:08,879 - #10 )
INFO  02:27:08,879 - #18 ;
INFO  02:27:08,879 - #17 else
INFO  02:27:08,879 - #14 print
INFO  02:27:08,879 - #9 (
INFO  02:27:08,879 - #24 -
INFO  02:27:08,880 - #48 1
INFO  02:27:08,880 - #10 )
INFO  02:27:08,880 - #18 ;
INFO  02:27:08,880 - #51 niz
INFO  02:27:08,880 - #11 = 
INFO  02:27:08,880 - #36 new
INFO  02:27:08,881 - #51 int
INFO  02:27:08,881 - #8 [
INFO  02:27:08,881 - #48 3
INFO  02:27:08,881 - #7 ]
INFO  02:27:08,882 - #18 ;
INFO  02:27:08,882 - #51 niz
INFO  02:27:08,882 - #8 [
INFO  02:27:08,882 - #48 0
INFO  02:27:08,882 - #7 ]
INFO  02:27:08,882 - #11 = 
INFO  02:27:08,883 - #48 1
INFO  02:27:08,883 - #18 ;
INFO  02:27:08,883 - #51 niz
INFO  02:27:08,883 - #8 [
INFO  02:27:08,883 - #48 1
INFO  02:27:08,884 - #7 ]
INFO  02:27:08,884 - #11 = 
INFO  02:27:08,884 - #48 2
INFO  02:27:08,884 - #18 ;
INFO  02:27:08,884 - #51 niz
INFO  02:27:08,884 - #8 [
INFO  02:27:08,885 - #48 2
INFO  02:27:08,885 - #7 ]
INFO  02:27:08,885 - #11 = 
INFO  02:27:08,885 - #51 sum
INFO  02:27:08,885 - #9 (
INFO  02:27:08,885 - #51 niz
INFO  02:27:08,886 - #8 [
INFO  02:27:08,886 - #48 1
INFO  02:27:08,886 - #7 ]
INFO  02:27:08,886 - #13 ,
INFO  02:27:08,886 - #51 niz
INFO  02:27:08,886 - #8 [
INFO  02:27:08,886 - #48 0
INFO  02:27:08,887 - #7 ]
INFO  02:27:08,887 - #10 )
INFO  02:27:08,887 - #23 +
INFO  02:27:08,887 - #48 1
INFO  02:27:08,887 - #18 ;
INFO  02:27:08,887 - #16 if
INFO  02:27:08,887 - #9 (
INFO  02:27:08,887 - #51 verify
INFO  02:27:08,887 - #9 (
INFO  02:27:08,888 - #10 )
INFO  02:27:08,889 - #40 ||
INFO  02:27:08,890 - #51 niz
INFO  02:27:08,890 - #8 [
INFO  02:27:08,890 - #48 2
INFO  02:27:08,890 - #7 ]
INFO  02:27:08,890 - #35 ==
INFO  02:27:08,890 - #48 4
INFO  02:27:08,891 - #10 )
INFO  02:27:08,891 - #14 print
INFO  02:27:08,891 - #9 (
INFO  02:27:08,891 - #51 ord
INFO  02:27:08,891 - #9 (
INFO  02:27:08,891 - #49 A
INFO  02:27:08,891 - #10 )
INFO  02:27:08,891 - #10 )
INFO  02:27:08,892 - #18 ;
INFO  02:27:08,892 - #17 else
INFO  02:27:08,892 - #14 print
INFO  02:27:08,892 - #9 (
INFO  02:27:08,892 - #51 ord
INFO  02:27:08,892 - #9 (
INFO  02:27:08,892 - #49 a
INFO  02:27:08,892 - #10 )
INFO  02:27:08,892 - #10 )
INFO  02:27:08,893 - #18 ;
INFO  02:27:08,893 - #14 print
INFO  02:27:08,893 - #9 (
INFO  02:27:08,893 - #51 eol
INFO  02:27:08,893 - #10 )
INFO  02:27:08,893 - #18 ;
INFO  02:27:08,893 - #51 i
INFO  02:27:08,894 - #11 = 
INFO  02:27:08,894 - #48 0
INFO  02:27:08,894 - #18 ;
INFO  02:27:08,894 - #44 do
INFO  02:27:08,894 - #4 {
INFO  02:27:08,895 - #16 if
INFO  02:27:08,899 - #9 (
INFO  02:27:08,900 - #51 i
INFO  02:27:08,900 - #35 ==
INFO  02:27:08,900 - #48 3
INFO  02:27:08,900 - #10 )
INFO  02:27:08,900 - #4 {
INFO  02:27:08,901 - #51 i
INFO  02:27:08,901 - #25 ++
INFO  02:27:08,901 - #18 ;
INFO  02:27:08,901 - #47 continue
INFO  02:27:08,901 - #18 ;
INFO  02:27:08,901 - #5 }
INFO  02:27:08,903 - #16 if
INFO  02:27:08,903 - #9 (
INFO  02:27:08,903 - #51 i
INFO  02:27:08,903 - #35 ==
INFO  02:27:08,903 - #48 4
INFO  02:27:08,903 - #10 )
INFO  02:27:08,904 - #3 break
INFO  02:27:08,904 - #18 ;
INFO  02:27:08,904 - #51 i
INFO  02:27:08,905 - #11 = 
INFO  02:27:08,906 - #51 inkrement
INFO  02:27:08,906 - #9 (
INFO  02:27:08,907 - #51 i
INFO  02:27:08,907 - #13 ,
INFO  02:27:08,907 - #48 1
INFO  02:27:08,908 - #10 )
INFO  02:27:08,909 - #18 ;
INFO  02:27:08,909 - #5 }
INFO  02:27:08,909 - #45 while
INFO  02:27:08,909 - #9 (
INFO  02:27:08,909 - #51 i
INFO  02:27:08,909 - #30 <
INFO  02:27:08,909 - #48 10
INFO  02:27:08,915 - #10 )
INFO  02:27:08,915 - #18 ;
INFO  02:27:08,915 - #16 if
INFO  02:27:08,916 - #9 (
INFO  02:27:08,916 - #51 i
INFO  02:27:08,916 - #35 ==
INFO  02:27:08,916 - #48 3
INFO  02:27:08,916 - #41 &&
INFO  02:27:08,916 - #51 verify
INFO  02:27:08,916 - #9 (
INFO  02:27:08,916 - #10 )
INFO  02:27:08,916 - #10 )
INFO  02:27:08,917 - #14 print
INFO  02:27:08,917 - #9 (
INFO  02:27:08,917 - #24 -
INFO  02:27:08,917 - #48 4
INFO  02:27:08,917 - #10 )
INFO  02:27:08,917 - #18 ;
INFO  02:27:08,917 - #17 else
INFO  02:27:08,917 - #14 print
INFO  02:27:08,917 - #9 (
INFO  02:27:08,917 - #48 4
INFO  02:27:08,917 - #10 )
INFO  02:27:08,917 - #18 ;
INFO  02:27:08,917 - #19 read
INFO  02:27:08,918 - #9 (
INFO  02:27:08,918 - #51 niz
INFO  02:27:08,918 - #8 [
INFO  02:27:08,918 - #48 0
INFO  02:27:08,919 - #7 ]
INFO  02:27:08,919 - #10 )
INFO  02:27:08,919 - #18 ;
INFO  02:27:08,920 - #19 read
INFO  02:27:08,920 - #9 (
INFO  02:27:08,920 - #51 niz
INFO  02:27:08,920 - #8 [
INFO  02:27:08,920 - #48 1
INFO  02:27:08,920 - #7 ]
INFO  02:27:08,920 - #10 )
INFO  02:27:08,921 - #18 ;
INFO  02:27:08,921 - #19 read
INFO  02:27:08,921 - #9 (
INFO  02:27:08,921 - #51 niz
INFO  02:27:08,921 - #8 [
INFO  02:27:08,921 - #48 2
INFO  02:27:08,921 - #7 ]
INFO  02:27:08,921 - #10 )
INFO  02:27:08,921 - #18 ;
INFO  02:27:08,921 - #14 print
INFO  02:27:08,921 - #9 (
INFO  02:27:08,921 - #51 eol
INFO  02:27:08,921 - #10 )
INFO  02:27:08,922 - #18 ;
INFO  02:27:08,922 - #14 print
INFO  02:27:08,922 - #9 (
INFO  02:27:08,922 - #51 sum
INFO  02:27:08,922 - #9 (
INFO  02:27:08,922 - #51 sum
INFO  02:27:08,922 - #9 (
INFO  02:27:08,922 - #51 niz
INFO  02:27:08,923 - #8 [
INFO  02:27:08,923 - #48 0
INFO  02:27:08,923 - #7 ]
INFO  02:27:08,923 - #13 ,
INFO  02:27:08,923 - #51 niz
INFO  02:27:08,923 - #8 [
INFO  02:27:08,923 - #48 1
INFO  02:27:08,923 - #7 ]
INFO  02:27:08,923 - #10 )
INFO  02:27:08,923 - #13 ,
INFO  02:27:08,923 - #51 niz
INFO  02:27:08,923 - #8 [
INFO  02:27:08,923 - #48 2
INFO  02:27:08,923 - #7 ]
INFO  02:27:08,923 - #10 )
INFO  02:27:08,924 - #10 )
INFO  02:27:08,924 - #18 ;
INFO  02:27:08,924 - #14 print
INFO  02:27:08,924 - #9 (
INFO  02:27:08,924 - #51 eol
INFO  02:27:08,924 - #10 )
INFO  02:27:08,924 - #18 ;
INFO  02:27:08,924 - #14 print
INFO  02:27:08,924 - #9 (
INFO  02:27:08,924 - #51 inkrement
INFO  02:27:08,924 - #9 (
INFO  02:27:08,924 - #51 niz
INFO  02:27:08,924 - #8 [
INFO  02:27:08,924 - #48 2
INFO  02:27:08,924 - #7 ]
INFO  02:27:08,924 - #13 ,
INFO  02:27:08,925 - #48 2
INFO  02:27:08,925 - #10 )
INFO  02:27:08,926 - #10 )
INFO  02:27:08,926 - #18 ;
INFO  02:27:08,926 - #51 j
INFO  02:27:08,926 - #11 =	
INFO  02:27:08,926 - #37 switch
INFO  02:27:08,926 - #9 (
INFO  02:27:08,926 - #51 i
INFO  02:27:08,926 - #10 )
INFO  02:27:08,926 - #4 {
INFO  02:27:08,926 - #38 case
INFO  02:27:08,928 - #48 1
INFO  02:27:08,928 - #20 :
INFO  02:27:08,928 - #14 print
ERROR 02:27:08,928 - 
Sintaksna greska na liniji 83
ERROR 02:27:08,928 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 83
